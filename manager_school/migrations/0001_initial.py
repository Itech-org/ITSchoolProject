# Generated by Django 3.0.8 on 2020-07-20 13:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('surname', models.CharField(blank=True, db_index=True, max_length=30, verbose_name='Отчество')),
                ('img_user', models.ImageField(blank=True, upload_to='images/user/', verbose_name='Аватар')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Номер телефона')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ClassModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(null=True, verbose_name='Дата проведения занятия')),
                ('theme', models.CharField(blank=True, max_length=250, verbose_name='Тема')),
                ('slug', models.SlugField(default=None, max_length=100)),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
            },
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Название')),
                ('discription', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('start_date', models.DateField(null=True, verbose_name='Начало занятий')),
                ('finish_date', models.DateField(null=True, verbose_name='Конец занятий')),
                ('img', models.ImageField(upload_to='images/courses/', verbose_name='Логотип курса')),
                ('amount', models.CharField(db_index=True, max_length=50, verbose_name='Количество занятий')),
                ('slug', models.SlugField(default=None, max_length=100)),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Описание материала')),
                ('url', models.URLField(max_length=100, verbose_name='Ссылка на материалы')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('class_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager_school.ClassModel', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='HomeworkTeacherModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Название')),
                ('file', models.FileField(blank=True, upload_to='file/teacher/', verbose_name='Файл с ДЗ')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Описание ДЗ')),
                ('url', models.URLField(max_length=100, verbose_name='Ссылка дз')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('class_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworkteacher', to='manager_school.ClassModel', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'ДЗ Преподавателя',
                'verbose_name_plural': 'ДЗ Преподавателей',
            },
        ),
        migrations.CreateModel(
            name='HomeworkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Название')),
                ('file', models.FileField(blank=True, upload_to='file/student/', verbose_name='Файл с ДЗ')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Описание ДЗ')),
                ('url', models.URLField(blank=True, max_length=100, verbose_name='Ссылка дз')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('class_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework', to='manager_school.ClassModel', verbose_name='Занятие')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'ДЗ Студена',
                'verbose_name_plural': 'ДЗ Студентов',
            },
        ),
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('course', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='manager_school.CourseUser', verbose_name='Курс')),
                ('students', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='groups_teacher', to=settings.AUTH_USER_MODEL, verbose_name='Учитель')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Аудитория')),
                ('classes', models.ManyToManyField(to='manager_school.ClassModel')),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
            },
        ),
        migrations.AddField(
            model_name='classmodel',
            name='groups',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='manager_school.GroupModel', verbose_name='Группа'),
        ),
    ]
