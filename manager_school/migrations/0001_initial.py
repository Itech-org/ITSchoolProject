# Generated by Django 3.0.8 on 2020-08-17 13:06

import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('surname', models.CharField(blank=True, db_index=True, max_length=30, verbose_name='Отчество')),
                ('img_user', models.ImageField(blank=True, upload_to='images/user/', verbose_name='Аватар')),
                ('phone', models.CharField(blank=True, max_length=30, verbose_name='Номер телефона')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('D', 'Dialog'), ('C', 'Chat')], default='D', max_length=1, verbose_name='Тип')),
            ],
            options={
                'verbose_name': 'Чат',
                'verbose_name_plural': 'Чаты',
            },
        ),
        migrations.CreateModel(
            name='ClassModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(null=True, verbose_name='Дата проведения занятия')),
                ('start_time', models.TimeField(null=True, verbose_name='Время начала занятия')),
                ('end_time', models.TimeField(null=True, verbose_name='Время окончания занятия')),
                ('theme', models.CharField(blank=True, max_length=250, verbose_name='Тема')),
                ('file', models.FileField(blank=True, upload_to='file/video_course/', verbose_name='Файл с видео')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('position', models.IntegerField(default=1, null=True, verbose_name='Номер занятия')),
            ],
            options={
                'verbose_name': 'Занятие',
                'verbose_name_plural': 'Занятия',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Аудитория')),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=126, unique=True, verbose_name='Номер договора')),
                ('date', models.DateField(verbose_name='Дата заключения договора')),
                ('price', models.FloatField(null=True, verbose_name='Цена')),
                ('is_subscribed', models.BooleanField(default=False, verbose_name='Контракт подписан?')),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Аккаунт')),
            ],
            options={
                'verbose_name': 'Контракт',
                'verbose_name_plural': 'Контракты',
                'ordering': ['-date', '-price'],
            },
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Название')),
                ('discription', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('start_date', models.DateField(null=True, verbose_name='Начало занятий')),
                ('finish_date', models.DateField(null=True, verbose_name='Конец занятий')),
                ('img', models.ImageField(upload_to='images/courses/', verbose_name='Логотип курса')),
                ('amount', models.CharField(db_index=True, max_length=50, verbose_name='Количество занятий')),
                ('slug', models.SlugField(default=None, max_length=100)),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курсы',
            },
        ),
        migrations.CreateModel(
            name='GroupModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(default=None, max_length=100, null=True)),
                ('course', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='manager_school.CourseUser', verbose_name='Курс')),
                ('manager', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='groups_manager', to=settings.AUTH_USER_MODEL, verbose_name='Куратор')),
                ('students', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='groups_teacher', to=settings.AUTH_USER_MODEL, verbose_name='Учитель')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Тело')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('slug', models.SlugField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='UserPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('by_stages', models.BooleanField(default=False, verbose_name='Разбить на этапы?')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачено')),
                ('contract', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='manager_school.Contract', verbose_name='Договор')),
            ],
            options={
                'verbose_name': 'Оплата',
                'verbose_name_plural': 'Оплаты',
            },
        ),
        migrations.CreateModel(
            name='UserManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_management', to=settings.AUTH_USER_MODEL, verbose_name='Менеджер')),
                ('student', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='management', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Привязка к менеджеру',
                'verbose_name_plural': 'Привязки к менеджерам',
            },
        ),
        migrations.CreateModel(
            name='StudyRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enter_date', models.DateTimeField(blank=True, verbose_name='Дата входа')),
                ('first_name', models.CharField(blank=True, max_length=128, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=128, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=128, verbose_name='Отчетсво')),
                ('communication_type', models.CharField(blank=True, max_length=256, verbose_name='Способ связи')),
                ('tel_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('source', models.CharField(blank=True, max_length=256, verbose_name='Источник')),
                ('status', models.CharField(blank=True, choices=[('Ready', 'Ready'), ('In Progress', 'In Progress'), ('Denial', 'Denial')], max_length=20, verbose_name='Статус лида')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='manager_school.CourseUser', verbose_name='Курс')),
                ('specialist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Специалист')),
            ],
            options={
                'verbose_name': 'Лид',
                'verbose_name_plural': 'Лиды',
                'ordering': ['-enter_date', 'status', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='RequestConversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, null=True, verbose_name='Дата разговора')),
                ('theses_of_conversation', models.TextField(blank=True, verbose_name='Тезисы разговора')),
                ('status', models.CharField(blank=True, choices=[('Ready', 'Ready'), ('Сall back', 'Сall back'), ('Denial', 'Denial')], max_length=20, null=True, verbose_name='Статус лида')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager_school.StudyRequest', verbose_name='Заявка')),
            ],
            options={
                'verbose_name': 'Разговор',
                'verbose_name_plural': 'Разговоры',
                'ordering': ['-date', 'status'],
            },
        ),
        migrations.CreateModel(
            name='PaymentStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='images/user/', verbose_name='Чек')),
                ('price', models.FloatField(null=True, verbose_name='Цена')),
                ('date', models.DateField(verbose_name='Дата платежа')),
                ('is_confirmed', models.BooleanField(default=False, verbose_name='Подтвержден?')),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager_school.UserPayment', verbose_name='Оплата')),
            ],
            options={
                'verbose_name': 'Этап оплата',
                'verbose_name_plural': 'Этапы оплаты',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('recieved_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата получения')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager_school.GroupModel', verbose_name='Получатель')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender_notification', to='manager_school.ClassModel', verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Уведомление о изменении ',
                'verbose_name_plural': 'Уведомления о изменениях',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата сообщения')),
                ('is_readed', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('document', models.FileField(blank=True, upload_to='file/chat_document/', verbose_name='Файл')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager_school.Chat', verbose_name='Чат')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
                'ordering': ['pub_date'],
            },
        ),
        migrations.CreateModel(
            name='MaterialVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание материала')),
                ('url', models.URLField(default=None, max_length=100, null=True, verbose_name='Ссылка на материалы')),
                ('file', models.FileField(blank=True, upload_to='file/video_materials/', verbose_name='Файл')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('class_field', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='manager_school.ClassModel', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Видеоматериал',
                'verbose_name_plural': 'Видеоматериалы',
            },
        ),
        migrations.CreateModel(
            name='MaterialText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, verbose_name='Заголовок')),
                ('img', models.ImageField(default='images/materials/Rectangle.svg', upload_to='images/materials/', verbose_name='Изображение')),
                ('description', models.TextField(blank=True, verbose_name='Описание материала')),
                ('url', models.URLField(default=None, max_length=100, null=True, verbose_name='Ссылка на материалы')),
                ('file', models.FileField(blank=True, upload_to='file/text_materials/', verbose_name='Файл')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('class_field', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='manager_school.ClassModel', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'Тесктовый материал',
                'verbose_name_plural': 'Текстовые материалы',
            },
        ),
        migrations.CreateModel(
            name='HomeworkTeacherModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Название')),
                ('file', models.FileField(blank=True, upload_to='file/teacher/', verbose_name='Файл с ДЗ')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Описание ДЗ')),
                ('url', models.URLField(default=None, max_length=100, null=True, verbose_name='Ссылка дз')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('class_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworkteacher', to='manager_school.ClassModel', verbose_name='Занятие')),
            ],
            options={
                'verbose_name': 'ДЗ Преподавателя',
                'verbose_name_plural': 'ДЗ Преподавателей',
            },
        ),
        migrations.CreateModel(
            name='HomeworkModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_index=True, max_length=150, verbose_name='Название')),
                ('file', models.FileField(blank=True, upload_to='file/student/', verbose_name='Файл с ДЗ')),
                ('description', models.TextField(blank=True, max_length=700, verbose_name='Описание ДЗ')),
                ('url', models.URLField(blank=True, default=None, max_length=100, null=True, verbose_name='Ссылка дз')),
                ('slug', models.SlugField(default=None, max_length=100)),
                ('status', models.CharField(choices=[('Проверено', 'Проверено'), ('Не проверено', 'Не проверено'), ('Не сдано', 'Не сдано')], default='nv', max_length=300)),
                ('rating', models.PositiveIntegerField(default=0, verbose_name='Оценка')),
                ('class_field', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='homework', to='manager_school.ClassModel', verbose_name='Занятие')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homework_st', to=settings.AUTH_USER_MODEL, verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'ДЗ Студена',
                'verbose_name_plural': 'ДЗ Студентов',
            },
        ),
        migrations.AddField(
            model_name='contract',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='manager_school.CourseUser', verbose_name='Курс'),
        ),
        migrations.AddField(
            model_name='contract',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='manager_school.GroupModel', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='contract',
            name='lead',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='contract', to='manager_school.StudyRequest', verbose_name='Лид'),
        ),
        migrations.AddField(
            model_name='classmodel',
            name='classroom',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classroom', to='manager_school.Classroom'),
        ),
        migrations.AddField(
            model_name='classmodel',
            name='groups',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='manager_school.GroupModel', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='chat',
            name='last_message',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_message', to='manager_school.Message'),
        ),
        migrations.AddField(
            model_name='chat',
            name='members',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Участники'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(blank=True, null=True, verbose_name='Оценка')),
                ('attendance', models.BooleanField(default=False, verbose_name='Присутствие')),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='manager_school.ClassModel')),
                ('students', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Посещение',
                'verbose_name_plural': 'Посещения',
                'ordering': ['students', 'attendance', 'rating'],
            },
        ),
    ]
